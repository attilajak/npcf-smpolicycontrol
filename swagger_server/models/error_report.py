# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.problem_details import ProblemDetails  # noqa: F401,E501
from swagger_server.models.rule_report import RuleReport  # noqa: F401,E501
from swagger_server.models.session_rule_report import SessionRuleReport  # noqa: F401,E501
from swagger_server import util


class ErrorReport(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, error: ProblemDetails=None, rule_reports: List[RuleReport]=None, sess_rule_reports: List[SessionRuleReport]=None):  # noqa: E501
        """ErrorReport - a model defined in Swagger

        :param error: The error of this ErrorReport.  # noqa: E501
        :type error: ProblemDetails
        :param rule_reports: The rule_reports of this ErrorReport.  # noqa: E501
        :type rule_reports: List[RuleReport]
        :param sess_rule_reports: The sess_rule_reports of this ErrorReport.  # noqa: E501
        :type sess_rule_reports: List[SessionRuleReport]
        """
        self.swagger_types = {
            'error': ProblemDetails,
            'rule_reports': List[RuleReport],
            'sess_rule_reports': List[SessionRuleReport]
        }

        self.attribute_map = {
            'error': 'error',
            'rule_reports': 'ruleReports',
            'sess_rule_reports': 'sessRuleReports'
        }
        self._error = error
        self._rule_reports = rule_reports
        self._sess_rule_reports = sess_rule_reports

    @classmethod
    def from_dict(cls, dikt) -> 'ErrorReport':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ErrorReport of this ErrorReport.  # noqa: E501
        :rtype: ErrorReport
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error(self) -> ProblemDetails:
        """Gets the error of this ErrorReport.


        :return: The error of this ErrorReport.
        :rtype: ProblemDetails
        """
        return self._error

    @error.setter
    def error(self, error: ProblemDetails):
        """Sets the error of this ErrorReport.


        :param error: The error of this ErrorReport.
        :type error: ProblemDetails
        """

        self._error = error

    @property
    def rule_reports(self) -> List[RuleReport]:
        """Gets the rule_reports of this ErrorReport.

        Used to report the PCC rule failure.  # noqa: E501

        :return: The rule_reports of this ErrorReport.
        :rtype: List[RuleReport]
        """
        return self._rule_reports

    @rule_reports.setter
    def rule_reports(self, rule_reports: List[RuleReport]):
        """Sets the rule_reports of this ErrorReport.

        Used to report the PCC rule failure.  # noqa: E501

        :param rule_reports: The rule_reports of this ErrorReport.
        :type rule_reports: List[RuleReport]
        """

        self._rule_reports = rule_reports

    @property
    def sess_rule_reports(self) -> List[SessionRuleReport]:
        """Gets the sess_rule_reports of this ErrorReport.

        Used to report the session rule failure.  # noqa: E501

        :return: The sess_rule_reports of this ErrorReport.
        :rtype: List[SessionRuleReport]
        """
        return self._sess_rule_reports

    @sess_rule_reports.setter
    def sess_rule_reports(self, sess_rule_reports: List[SessionRuleReport]):
        """Sets the sess_rule_reports of this ErrorReport.

        Used to report the session rule failure.  # noqa: E501

        :param sess_rule_reports: The sess_rule_reports of this ErrorReport.
        :type sess_rule_reports: List[SessionRuleReport]
        """

        self._sess_rule_reports = sess_rule_reports
