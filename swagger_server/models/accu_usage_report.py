# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.duration_sec import DurationSec  # noqa: F401,E501
from swagger_server.models.volume import Volume  # noqa: F401,E501
from swagger_server import util


class AccuUsageReport(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, ref_um_ids: str=None, vol_usage: Volume=None, vol_usage_uplink: Volume=None, vol_usage_downlink: Volume=None, time_usage: DurationSec=None, next_vol_usage: Volume=None, next_vol_usage_uplink: Volume=None, next_vol_usage_downlink: Volume=None, next_time_usage: DurationSec=None):  # noqa: E501
        """AccuUsageReport - a model defined in Swagger

        :param ref_um_ids: The ref_um_ids of this AccuUsageReport.  # noqa: E501
        :type ref_um_ids: str
        :param vol_usage: The vol_usage of this AccuUsageReport.  # noqa: E501
        :type vol_usage: Volume
        :param vol_usage_uplink: The vol_usage_uplink of this AccuUsageReport.  # noqa: E501
        :type vol_usage_uplink: Volume
        :param vol_usage_downlink: The vol_usage_downlink of this AccuUsageReport.  # noqa: E501
        :type vol_usage_downlink: Volume
        :param time_usage: The time_usage of this AccuUsageReport.  # noqa: E501
        :type time_usage: DurationSec
        :param next_vol_usage: The next_vol_usage of this AccuUsageReport.  # noqa: E501
        :type next_vol_usage: Volume
        :param next_vol_usage_uplink: The next_vol_usage_uplink of this AccuUsageReport.  # noqa: E501
        :type next_vol_usage_uplink: Volume
        :param next_vol_usage_downlink: The next_vol_usage_downlink of this AccuUsageReport.  # noqa: E501
        :type next_vol_usage_downlink: Volume
        :param next_time_usage: The next_time_usage of this AccuUsageReport.  # noqa: E501
        :type next_time_usage: DurationSec
        """
        self.swagger_types = {
            'ref_um_ids': str,
            'vol_usage': Volume,
            'vol_usage_uplink': Volume,
            'vol_usage_downlink': Volume,
            'time_usage': DurationSec,
            'next_vol_usage': Volume,
            'next_vol_usage_uplink': Volume,
            'next_vol_usage_downlink': Volume,
            'next_time_usage': DurationSec
        }

        self.attribute_map = {
            'ref_um_ids': 'refUmIds',
            'vol_usage': 'volUsage',
            'vol_usage_uplink': 'volUsageUplink',
            'vol_usage_downlink': 'volUsageDownlink',
            'time_usage': 'timeUsage',
            'next_vol_usage': 'nextVolUsage',
            'next_vol_usage_uplink': 'nextVolUsageUplink',
            'next_vol_usage_downlink': 'nextVolUsageDownlink',
            'next_time_usage': 'nextTimeUsage'
        }
        self._ref_um_ids = ref_um_ids
        self._vol_usage = vol_usage
        self._vol_usage_uplink = vol_usage_uplink
        self._vol_usage_downlink = vol_usage_downlink
        self._time_usage = time_usage
        self._next_vol_usage = next_vol_usage
        self._next_vol_usage_uplink = next_vol_usage_uplink
        self._next_vol_usage_downlink = next_vol_usage_downlink
        self._next_time_usage = next_time_usage

    @classmethod
    def from_dict(cls, dikt) -> 'AccuUsageReport':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AccuUsageReport of this AccuUsageReport.  # noqa: E501
        :rtype: AccuUsageReport
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ref_um_ids(self) -> str:
        """Gets the ref_um_ids of this AccuUsageReport.

        An id referencing UsageMonitoringData objects associated with this usage report.  # noqa: E501

        :return: The ref_um_ids of this AccuUsageReport.
        :rtype: str
        """
        return self._ref_um_ids

    @ref_um_ids.setter
    def ref_um_ids(self, ref_um_ids: str):
        """Sets the ref_um_ids of this AccuUsageReport.

        An id referencing UsageMonitoringData objects associated with this usage report.  # noqa: E501

        :param ref_um_ids: The ref_um_ids of this AccuUsageReport.
        :type ref_um_ids: str
        """
        if ref_um_ids is None:
            raise ValueError("Invalid value for `ref_um_ids`, must not be `None`")  # noqa: E501

        self._ref_um_ids = ref_um_ids

    @property
    def vol_usage(self) -> Volume:
        """Gets the vol_usage of this AccuUsageReport.


        :return: The vol_usage of this AccuUsageReport.
        :rtype: Volume
        """
        return self._vol_usage

    @vol_usage.setter
    def vol_usage(self, vol_usage: Volume):
        """Sets the vol_usage of this AccuUsageReport.


        :param vol_usage: The vol_usage of this AccuUsageReport.
        :type vol_usage: Volume
        """

        self._vol_usage = vol_usage

    @property
    def vol_usage_uplink(self) -> Volume:
        """Gets the vol_usage_uplink of this AccuUsageReport.


        :return: The vol_usage_uplink of this AccuUsageReport.
        :rtype: Volume
        """
        return self._vol_usage_uplink

    @vol_usage_uplink.setter
    def vol_usage_uplink(self, vol_usage_uplink: Volume):
        """Sets the vol_usage_uplink of this AccuUsageReport.


        :param vol_usage_uplink: The vol_usage_uplink of this AccuUsageReport.
        :type vol_usage_uplink: Volume
        """

        self._vol_usage_uplink = vol_usage_uplink

    @property
    def vol_usage_downlink(self) -> Volume:
        """Gets the vol_usage_downlink of this AccuUsageReport.


        :return: The vol_usage_downlink of this AccuUsageReport.
        :rtype: Volume
        """
        return self._vol_usage_downlink

    @vol_usage_downlink.setter
    def vol_usage_downlink(self, vol_usage_downlink: Volume):
        """Sets the vol_usage_downlink of this AccuUsageReport.


        :param vol_usage_downlink: The vol_usage_downlink of this AccuUsageReport.
        :type vol_usage_downlink: Volume
        """

        self._vol_usage_downlink = vol_usage_downlink

    @property
    def time_usage(self) -> DurationSec:
        """Gets the time_usage of this AccuUsageReport.


        :return: The time_usage of this AccuUsageReport.
        :rtype: DurationSec
        """
        return self._time_usage

    @time_usage.setter
    def time_usage(self, time_usage: DurationSec):
        """Sets the time_usage of this AccuUsageReport.


        :param time_usage: The time_usage of this AccuUsageReport.
        :type time_usage: DurationSec
        """

        self._time_usage = time_usage

    @property
    def next_vol_usage(self) -> Volume:
        """Gets the next_vol_usage of this AccuUsageReport.


        :return: The next_vol_usage of this AccuUsageReport.
        :rtype: Volume
        """
        return self._next_vol_usage

    @next_vol_usage.setter
    def next_vol_usage(self, next_vol_usage: Volume):
        """Sets the next_vol_usage of this AccuUsageReport.


        :param next_vol_usage: The next_vol_usage of this AccuUsageReport.
        :type next_vol_usage: Volume
        """

        self._next_vol_usage = next_vol_usage

    @property
    def next_vol_usage_uplink(self) -> Volume:
        """Gets the next_vol_usage_uplink of this AccuUsageReport.


        :return: The next_vol_usage_uplink of this AccuUsageReport.
        :rtype: Volume
        """
        return self._next_vol_usage_uplink

    @next_vol_usage_uplink.setter
    def next_vol_usage_uplink(self, next_vol_usage_uplink: Volume):
        """Sets the next_vol_usage_uplink of this AccuUsageReport.


        :param next_vol_usage_uplink: The next_vol_usage_uplink of this AccuUsageReport.
        :type next_vol_usage_uplink: Volume
        """

        self._next_vol_usage_uplink = next_vol_usage_uplink

    @property
    def next_vol_usage_downlink(self) -> Volume:
        """Gets the next_vol_usage_downlink of this AccuUsageReport.


        :return: The next_vol_usage_downlink of this AccuUsageReport.
        :rtype: Volume
        """
        return self._next_vol_usage_downlink

    @next_vol_usage_downlink.setter
    def next_vol_usage_downlink(self, next_vol_usage_downlink: Volume):
        """Sets the next_vol_usage_downlink of this AccuUsageReport.


        :param next_vol_usage_downlink: The next_vol_usage_downlink of this AccuUsageReport.
        :type next_vol_usage_downlink: Volume
        """

        self._next_vol_usage_downlink = next_vol_usage_downlink

    @property
    def next_time_usage(self) -> DurationSec:
        """Gets the next_time_usage of this AccuUsageReport.


        :return: The next_time_usage of this AccuUsageReport.
        :rtype: DurationSec
        """
        return self._next_time_usage

    @next_time_usage.setter
    def next_time_usage(self, next_time_usage: DurationSec):
        """Sets the next_time_usage of this AccuUsageReport.


        :param next_time_usage: The next_time_usage of this AccuUsageReport.
        :type next_time_usage: DurationSec
        """

        self._next_time_usage = next_time_usage
