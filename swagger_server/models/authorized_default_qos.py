# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.arp import Arp  # noqa: F401,E501
from swagger_server.models.aver_window_rm import AverWindowRm  # noqa: F401,E501
from swagger_server.models.max_data_burst_vol_rm import MaxDataBurstVolRm  # noqa: F401,E501
from swagger_server.models.model5_qi import Model5Qi  # noqa: F401,E501
from swagger_server.models.model5_qi_priority_level_rm import Model5QiPriorityLevelRm  # noqa: F401,E501
from swagger_server import util


class AuthorizedDefaultQos(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, _5qi: Model5Qi=None, arp: Arp=None, priority_level: Model5QiPriorityLevelRm=None, aver_window: AverWindowRm=None, max_data_burst_vol: MaxDataBurstVolRm=None):  # noqa: E501
        """AuthorizedDefaultQos - a model defined in Swagger

        :param _5qi: The _5qi of this AuthorizedDefaultQos.  # noqa: E501
        :type _5qi: Model5Qi
        :param arp: The arp of this AuthorizedDefaultQos.  # noqa: E501
        :type arp: Arp
        :param priority_level: The priority_level of this AuthorizedDefaultQos.  # noqa: E501
        :type priority_level: Model5QiPriorityLevelRm
        :param aver_window: The aver_window of this AuthorizedDefaultQos.  # noqa: E501
        :type aver_window: AverWindowRm
        :param max_data_burst_vol: The max_data_burst_vol of this AuthorizedDefaultQos.  # noqa: E501
        :type max_data_burst_vol: MaxDataBurstVolRm
        """
        self.swagger_types = {
            '_5qi': Model5Qi,
            'arp': Arp,
            'priority_level': Model5QiPriorityLevelRm,
            'aver_window': AverWindowRm,
            'max_data_burst_vol': MaxDataBurstVolRm
        }

        self.attribute_map = {
            '_5qi': '5qi',
            'arp': 'arp',
            'priority_level': 'priorityLevel',
            'aver_window': 'averWindow',
            'max_data_burst_vol': 'maxDataBurstVol'
        }
        self.__5qi = _5qi
        self._arp = arp
        self._priority_level = priority_level
        self._aver_window = aver_window
        self._max_data_burst_vol = max_data_burst_vol

    @classmethod
    def from_dict(cls, dikt) -> 'AuthorizedDefaultQos':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AuthorizedDefaultQos of this AuthorizedDefaultQos.  # noqa: E501
        :rtype: AuthorizedDefaultQos
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _5qi(self) -> Model5Qi:
        """Gets the _5qi of this AuthorizedDefaultQos.


        :return: The _5qi of this AuthorizedDefaultQos.
        :rtype: Model5Qi
        """
        return self.__5qi

    @_5qi.setter
    def _5qi(self, _5qi: Model5Qi):
        """Sets the _5qi of this AuthorizedDefaultQos.


        :param _5qi: The _5qi of this AuthorizedDefaultQos.
        :type _5qi: Model5Qi
        """

        self.__5qi = _5qi

    @property
    def arp(self) -> Arp:
        """Gets the arp of this AuthorizedDefaultQos.


        :return: The arp of this AuthorizedDefaultQos.
        :rtype: Arp
        """
        return self._arp

    @arp.setter
    def arp(self, arp: Arp):
        """Sets the arp of this AuthorizedDefaultQos.


        :param arp: The arp of this AuthorizedDefaultQos.
        :type arp: Arp
        """

        self._arp = arp

    @property
    def priority_level(self) -> Model5QiPriorityLevelRm:
        """Gets the priority_level of this AuthorizedDefaultQos.


        :return: The priority_level of this AuthorizedDefaultQos.
        :rtype: Model5QiPriorityLevelRm
        """
        return self._priority_level

    @priority_level.setter
    def priority_level(self, priority_level: Model5QiPriorityLevelRm):
        """Sets the priority_level of this AuthorizedDefaultQos.


        :param priority_level: The priority_level of this AuthorizedDefaultQos.
        :type priority_level: Model5QiPriorityLevelRm
        """

        self._priority_level = priority_level

    @property
    def aver_window(self) -> AverWindowRm:
        """Gets the aver_window of this AuthorizedDefaultQos.


        :return: The aver_window of this AuthorizedDefaultQos.
        :rtype: AverWindowRm
        """
        return self._aver_window

    @aver_window.setter
    def aver_window(self, aver_window: AverWindowRm):
        """Sets the aver_window of this AuthorizedDefaultQos.


        :param aver_window: The aver_window of this AuthorizedDefaultQos.
        :type aver_window: AverWindowRm
        """

        self._aver_window = aver_window

    @property
    def max_data_burst_vol(self) -> MaxDataBurstVolRm:
        """Gets the max_data_burst_vol of this AuthorizedDefaultQos.


        :return: The max_data_burst_vol of this AuthorizedDefaultQos.
        :rtype: MaxDataBurstVolRm
        """
        return self._max_data_burst_vol

    @max_data_burst_vol.setter
    def max_data_burst_vol(self, max_data_burst_vol: MaxDataBurstVolRm):
        """Sets the max_data_burst_vol of this AuthorizedDefaultQos.


        :param max_data_burst_vol: The max_data_burst_vol of this AuthorizedDefaultQos.
        :type max_data_burst_vol: MaxDataBurstVolRm
        """

        self._max_data_burst_vol = max_data_burst_vol
