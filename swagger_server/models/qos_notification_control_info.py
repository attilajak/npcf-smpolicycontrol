# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.content_version import ContentVersion  # noqa: F401,E501
from swagger_server.models.qos_notif_type import QosNotifType  # noqa: F401,E501
from swagger_server import util


class QosNotificationControlInfo(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, ref_pcc_rule_ids: List[str]=None, notif_type: QosNotifType=None, cont_ver: ContentVersion=None):  # noqa: E501
        """QosNotificationControlInfo - a model defined in Swagger

        :param ref_pcc_rule_ids: The ref_pcc_rule_ids of this QosNotificationControlInfo.  # noqa: E501
        :type ref_pcc_rule_ids: List[str]
        :param notif_type: The notif_type of this QosNotificationControlInfo.  # noqa: E501
        :type notif_type: QosNotifType
        :param cont_ver: The cont_ver of this QosNotificationControlInfo.  # noqa: E501
        :type cont_ver: ContentVersion
        """
        self.swagger_types = {
            'ref_pcc_rule_ids': List[str],
            'notif_type': QosNotifType,
            'cont_ver': ContentVersion
        }

        self.attribute_map = {
            'ref_pcc_rule_ids': 'refPccRuleIds',
            'notif_type': 'notifType',
            'cont_ver': 'contVer'
        }
        self._ref_pcc_rule_ids = ref_pcc_rule_ids
        self._notif_type = notif_type
        self._cont_ver = cont_ver

    @classmethod
    def from_dict(cls, dikt) -> 'QosNotificationControlInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The QosNotificationControlInfo of this QosNotificationControlInfo.  # noqa: E501
        :rtype: QosNotificationControlInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ref_pcc_rule_ids(self) -> List[str]:
        """Gets the ref_pcc_rule_ids of this QosNotificationControlInfo.

        An array of PCC rule id references to the PCC rules associated with the QoS notification control info.  # noqa: E501

        :return: The ref_pcc_rule_ids of this QosNotificationControlInfo.
        :rtype: List[str]
        """
        return self._ref_pcc_rule_ids

    @ref_pcc_rule_ids.setter
    def ref_pcc_rule_ids(self, ref_pcc_rule_ids: List[str]):
        """Sets the ref_pcc_rule_ids of this QosNotificationControlInfo.

        An array of PCC rule id references to the PCC rules associated with the QoS notification control info.  # noqa: E501

        :param ref_pcc_rule_ids: The ref_pcc_rule_ids of this QosNotificationControlInfo.
        :type ref_pcc_rule_ids: List[str]
        """
        if ref_pcc_rule_ids is None:
            raise ValueError("Invalid value for `ref_pcc_rule_ids`, must not be `None`")  # noqa: E501

        self._ref_pcc_rule_ids = ref_pcc_rule_ids

    @property
    def notif_type(self) -> QosNotifType:
        """Gets the notif_type of this QosNotificationControlInfo.


        :return: The notif_type of this QosNotificationControlInfo.
        :rtype: QosNotifType
        """
        return self._notif_type

    @notif_type.setter
    def notif_type(self, notif_type: QosNotifType):
        """Sets the notif_type of this QosNotificationControlInfo.


        :param notif_type: The notif_type of this QosNotificationControlInfo.
        :type notif_type: QosNotifType
        """
        if notif_type is None:
            raise ValueError("Invalid value for `notif_type`, must not be `None`")  # noqa: E501

        self._notif_type = notif_type

    @property
    def cont_ver(self) -> ContentVersion:
        """Gets the cont_ver of this QosNotificationControlInfo.


        :return: The cont_ver of this QosNotificationControlInfo.
        :rtype: ContentVersion
        """
        return self._cont_ver

    @cont_ver.setter
    def cont_ver(self, cont_ver: ContentVersion):
        """Sets the cont_ver of this QosNotificationControlInfo.


        :param cont_ver: The cont_ver of this QosNotificationControlInfo.
        :type cont_ver: ContentVersion
        """

        self._cont_ver = cont_ver
