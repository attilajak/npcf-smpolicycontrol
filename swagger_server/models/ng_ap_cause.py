# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.uinteger import Uinteger  # noqa: F401,E501
from swagger_server import util


class NgApCause(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, group: Uinteger=None, value: Uinteger=None):  # noqa: E501
        """NgApCause - a model defined in Swagger

        :param group: The group of this NgApCause.  # noqa: E501
        :type group: Uinteger
        :param value: The value of this NgApCause.  # noqa: E501
        :type value: Uinteger
        """
        self.swagger_types = {
            'group': Uinteger,
            'value': Uinteger
        }

        self.attribute_map = {
            'group': 'group',
            'value': 'value'
        }
        self._group = group
        self._value = value

    @classmethod
    def from_dict(cls, dikt) -> 'NgApCause':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The NgApCause of this NgApCause.  # noqa: E501
        :rtype: NgApCause
        """
        return util.deserialize_model(dikt, cls)

    @property
    def group(self) -> Uinteger:
        """Gets the group of this NgApCause.


        :return: The group of this NgApCause.
        :rtype: Uinteger
        """
        return self._group

    @group.setter
    def group(self, group: Uinteger):
        """Sets the group of this NgApCause.


        :param group: The group of this NgApCause.
        :type group: Uinteger
        """
        if group is None:
            raise ValueError("Invalid value for `group`, must not be `None`")  # noqa: E501

        self._group = group

    @property
    def value(self) -> Uinteger:
        """Gets the value of this NgApCause.


        :return: The value of this NgApCause.
        :rtype: Uinteger
        """
        return self._value

    @value.setter
    def value(self, value: Uinteger):
        """Sets the value of this NgApCause.


        :param value: The value of this NgApCause.
        :type value: Uinteger
        """
        if value is None:
            raise ValueError("Invalid value for `value`, must not be `None`")  # noqa: E501

        self._value = value
