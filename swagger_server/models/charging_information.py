# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.uri import Uri  # noqa: F401,E501
from swagger_server import util


class ChargingInformation(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, primary_chf_address: Uri=None, secondary_chf_address: Uri=None):  # noqa: E501
        """ChargingInformation - a model defined in Swagger

        :param primary_chf_address: The primary_chf_address of this ChargingInformation.  # noqa: E501
        :type primary_chf_address: Uri
        :param secondary_chf_address: The secondary_chf_address of this ChargingInformation.  # noqa: E501
        :type secondary_chf_address: Uri
        """
        self.swagger_types = {
            'primary_chf_address': Uri,
            'secondary_chf_address': Uri
        }

        self.attribute_map = {
            'primary_chf_address': 'primaryChfAddress',
            'secondary_chf_address': 'secondaryChfAddress'
        }
        self._primary_chf_address = primary_chf_address
        self._secondary_chf_address = secondary_chf_address

    @classmethod
    def from_dict(cls, dikt) -> 'ChargingInformation':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ChargingInformation of this ChargingInformation.  # noqa: E501
        :rtype: ChargingInformation
        """
        return util.deserialize_model(dikt, cls)

    @property
    def primary_chf_address(self) -> Uri:
        """Gets the primary_chf_address of this ChargingInformation.


        :return: The primary_chf_address of this ChargingInformation.
        :rtype: Uri
        """
        return self._primary_chf_address

    @primary_chf_address.setter
    def primary_chf_address(self, primary_chf_address: Uri):
        """Sets the primary_chf_address of this ChargingInformation.


        :param primary_chf_address: The primary_chf_address of this ChargingInformation.
        :type primary_chf_address: Uri
        """
        if primary_chf_address is None:
            raise ValueError("Invalid value for `primary_chf_address`, must not be `None`")  # noqa: E501

        self._primary_chf_address = primary_chf_address

    @property
    def secondary_chf_address(self) -> Uri:
        """Gets the secondary_chf_address of this ChargingInformation.


        :return: The secondary_chf_address of this ChargingInformation.
        :rtype: Uri
        """
        return self._secondary_chf_address

    @secondary_chf_address.setter
    def secondary_chf_address(self, secondary_chf_address: Uri):
        """Sets the secondary_chf_address of this ChargingInformation.


        :param secondary_chf_address: The secondary_chf_address of this ChargingInformation.
        :type secondary_chf_address: Uri
        """
        if secondary_chf_address is None:
            raise ValueError("Invalid value for `secondary_chf_address`, must not be `None`")  # noqa: E501

        self._secondary_chf_address = secondary_chf_address
