# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.flow_description2 import FlowDescription2  # noqa: F401,E501
from swagger_server.models.flow_direction2 import FlowDirection2  # noqa: F401,E501
from swagger_server.models.mac_addr48 import MacAddr48  # noqa: F401,E501
from swagger_server import util


class EthFlowDescription(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, dest_mac_addr: MacAddr48=None, eth_type: str=None, f_desc: FlowDescription2=None, f_dir: FlowDirection2=None, source_mac_addr: MacAddr48=None, vlan_tags: List[str]=None):  # noqa: E501
        """EthFlowDescription - a model defined in Swagger

        :param dest_mac_addr: The dest_mac_addr of this EthFlowDescription.  # noqa: E501
        :type dest_mac_addr: MacAddr48
        :param eth_type: The eth_type of this EthFlowDescription.  # noqa: E501
        :type eth_type: str
        :param f_desc: The f_desc of this EthFlowDescription.  # noqa: E501
        :type f_desc: FlowDescription2
        :param f_dir: The f_dir of this EthFlowDescription.  # noqa: E501
        :type f_dir: FlowDirection2
        :param source_mac_addr: The source_mac_addr of this EthFlowDescription.  # noqa: E501
        :type source_mac_addr: MacAddr48
        :param vlan_tags: The vlan_tags of this EthFlowDescription.  # noqa: E501
        :type vlan_tags: List[str]
        """
        self.swagger_types = {
            'dest_mac_addr': MacAddr48,
            'eth_type': str,
            'f_desc': FlowDescription2,
            'f_dir': FlowDirection2,
            'source_mac_addr': MacAddr48,
            'vlan_tags': List[str]
        }

        self.attribute_map = {
            'dest_mac_addr': 'destMacAddr',
            'eth_type': 'ethType',
            'f_desc': 'fDesc',
            'f_dir': 'fDir',
            'source_mac_addr': 'sourceMacAddr',
            'vlan_tags': 'vlanTags'
        }
        self._dest_mac_addr = dest_mac_addr
        self._eth_type = eth_type
        self._f_desc = f_desc
        self._f_dir = f_dir
        self._source_mac_addr = source_mac_addr
        self._vlan_tags = vlan_tags

    @classmethod
    def from_dict(cls, dikt) -> 'EthFlowDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The EthFlowDescription of this EthFlowDescription.  # noqa: E501
        :rtype: EthFlowDescription
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dest_mac_addr(self) -> MacAddr48:
        """Gets the dest_mac_addr of this EthFlowDescription.


        :return: The dest_mac_addr of this EthFlowDescription.
        :rtype: MacAddr48
        """
        return self._dest_mac_addr

    @dest_mac_addr.setter
    def dest_mac_addr(self, dest_mac_addr: MacAddr48):
        """Sets the dest_mac_addr of this EthFlowDescription.


        :param dest_mac_addr: The dest_mac_addr of this EthFlowDescription.
        :type dest_mac_addr: MacAddr48
        """

        self._dest_mac_addr = dest_mac_addr

    @property
    def eth_type(self) -> str:
        """Gets the eth_type of this EthFlowDescription.


        :return: The eth_type of this EthFlowDescription.
        :rtype: str
        """
        return self._eth_type

    @eth_type.setter
    def eth_type(self, eth_type: str):
        """Sets the eth_type of this EthFlowDescription.


        :param eth_type: The eth_type of this EthFlowDescription.
        :type eth_type: str
        """
        if eth_type is None:
            raise ValueError("Invalid value for `eth_type`, must not be `None`")  # noqa: E501

        self._eth_type = eth_type

    @property
    def f_desc(self) -> FlowDescription2:
        """Gets the f_desc of this EthFlowDescription.


        :return: The f_desc of this EthFlowDescription.
        :rtype: FlowDescription2
        """
        return self._f_desc

    @f_desc.setter
    def f_desc(self, f_desc: FlowDescription2):
        """Sets the f_desc of this EthFlowDescription.


        :param f_desc: The f_desc of this EthFlowDescription.
        :type f_desc: FlowDescription2
        """

        self._f_desc = f_desc

    @property
    def f_dir(self) -> FlowDirection2:
        """Gets the f_dir of this EthFlowDescription.


        :return: The f_dir of this EthFlowDescription.
        :rtype: FlowDirection2
        """
        return self._f_dir

    @f_dir.setter
    def f_dir(self, f_dir: FlowDirection2):
        """Sets the f_dir of this EthFlowDescription.


        :param f_dir: The f_dir of this EthFlowDescription.
        :type f_dir: FlowDirection2
        """

        self._f_dir = f_dir

    @property
    def source_mac_addr(self) -> MacAddr48:
        """Gets the source_mac_addr of this EthFlowDescription.


        :return: The source_mac_addr of this EthFlowDescription.
        :rtype: MacAddr48
        """
        return self._source_mac_addr

    @source_mac_addr.setter
    def source_mac_addr(self, source_mac_addr: MacAddr48):
        """Sets the source_mac_addr of this EthFlowDescription.


        :param source_mac_addr: The source_mac_addr of this EthFlowDescription.
        :type source_mac_addr: MacAddr48
        """

        self._source_mac_addr = source_mac_addr

    @property
    def vlan_tags(self) -> List[str]:
        """Gets the vlan_tags of this EthFlowDescription.


        :return: The vlan_tags of this EthFlowDescription.
        :rtype: List[str]
        """
        return self._vlan_tags

    @vlan_tags.setter
    def vlan_tags(self, vlan_tags: List[str]):
        """Sets the vlan_tags of this EthFlowDescription.


        :param vlan_tags: The vlan_tags of this EthFlowDescription.
        :type vlan_tags: List[str]
        """

        self._vlan_tags = vlan_tags
